class AppConfig  
  require 'rubygems'
  require 'active_record'
  require 'yaml'

  def self.load(config_file, section=nil)
    if (config_file.nil?)
      if (not defined?(RAILS_ROOT))
        raise "undefined config_file"
      end
      config_file = File.join(RAILS_ROOT, "config", "application.yml")
    end

    raise "#{config_file} dosen't exist" unless File.exists? config_file

    yml_contents=YAML.load(File.read(config_file))
    if (section.nil?) 
      section=ENV['RAILS_ENV']
      raise "no section: ENV is #{ENV.inspect}" if section.nil?
    end

    if (not defined? yml_contents[section] or yml_contents[section].nil?)
      raise "no section '#{section}' in #{config_file}"
    end
      
    config = yml_contents[section]

    config.keys.each do |key|
      cattr_accessor key
      send("#{key}=", config[key])
    end
    
    common=yml_contents['common']
    if common
      common.keys.each do |key|
        cattr_accessor key
        send("#{key}=",common[key])
      end
    end                       # if common

    def [](key)
      
    end
  end
end
